import Header from "@/components/Header";
import { useGetCurrentUserQuery, useLoginMutation } from "@/queries/auth";
import Head from "next/head";
import { useState } from "react";

export default function Home() {
  const [email, setEmail] = useState("john@gmail.com");
  const [password, setPassword] = useState("secret");
  const mutation = useLoginMutation();
  const currentUser = useGetCurrentUserQuery();

  const onSubmit = async () => {
    await mutation.mutate({ email, password });
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />

      <main>
        <h1>A simple client implementation for Authentication</h1>
        {/* This is a bad pattern, use something better in your project */}
        <div>
          {mutation.isLoading
            ? "Loading"
            : mutation.isError
            ? "Invalid credentials, please try again"
            : mutation.isSuccess
            ? "Login successfully, please wait while we redirect you..."
            : ""}
        </div>
        <form
          onSubmit={(e) => {
            e.preventDefault();
            onSubmit();
          }}
        >
          <label>
            Email
            <input
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              required
              type="email"
            />
          </label>
          <label>
            Password
            <input
              type="password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
            />
          </label>

          <button type="submit" disabled={mutation.isLoading}>
            {mutation.isLoading ? "Loading" : "Submit"}
          </button>
        </form>
      </main>
    </>
  );
}
